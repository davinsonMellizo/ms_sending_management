apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: #{app-gateway}#-apigw
  namespace: #{namespace}#
  labels:
    app.bancolombia.com.co/env: #{env}#
    app.bancolombia.com.co/cost-center: #{cost-center}#
    app.bancolombia.com.co/application-code: #{application-code}#
    app.bancolombia.com.co/project: #{project-name}#
    app.bancolombia.com.co/pmo: #{pmo}#
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - #{gateway-host-apigw}#
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: #{name}#-vs-2
  namespace: #{namespace}#
  labels:
    app.bancolombia.com.co/env: #{env}#
    app.bancolombia.com.co/cost-center: #{cost-center}#
    app.bancolombia.com.co/application-code: #{application-code}#
    app.bancolombia.com.co/project: #{project-name}#
    app.bancolombia.com.co/pmo: #{pmo}#
spec:
  hosts:
    - #{gateway-host-apigw}#
  gateways:
    - #{app-gateway}#-apigw
  http:
    - match:
        - uri:
            prefix: /#{project-name}##{prefix}#/#{service}#
      rewrite:
        uri: "#{prefix}#/#{service}#"
      route:
        - destination:
            host: #{name}#
            port:
              number: 80
      #websocketUpgrade: true #if websockets are required

---
apiVersion: security.istio.io/v1beta1
kind: RequestAuthentication
metadata:
  name: #{service}#-request-auth
  namespace: #{namespace}#
spec:
  selector:
    matchLabels:
      pod:  #{name}#-pod
  jwtRules:
  - issuer: #{issuer}#
    jwksUri: #{jwksUri}#
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: #{service}#-auth-policy
  namespace: #{namespace}#
spec:
  selector:
    matchLabels:
      pod:  #{name}#-pod
  rules:
  - from:
    - source:
        requestPrincipals: ["*"]