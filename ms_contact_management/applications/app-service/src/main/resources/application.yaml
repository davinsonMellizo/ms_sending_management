server:
  port: "${SERVER_PORT}"
  servlet:
    encoding:
      charset: "UTF-8"
      force: true
springdoc:
  version: 1
spring:
  application:
    name: "${APPLICATION_NAME}"
  devtools:
    add-properties: false
  jackson:
    default-property-inclusion: "NON_NULL"
  profiles:
    active: "${SPRING_PROFILE_ACTIVE}"
  webflux:
    base-path: "${PATH_BASE}"
  logging:
    level:
      root: "${LOG4J_LEVEL}"
      reactor:
        netty: false

adapters:
  secrets-manager:
    secret-rds: "${SECRET-RDS}"
    secret-rabbit: "${SECRET-RABBIT}"
    cache-size: "${CACHE_SECRETS_SIZE}"
    cache-time: "${CACHE_SECRETS_SECONDS}"
    endpoint: "http://localhost:4566"
  entries:
    reactive-web:
      path-base: "${PATH_BASE}"
      contact: "${CONTACT}"
      client: "${CLIENT}"
  rest-consumer:
    timeout: 1000
    resources:
      basicKit: "${BASIC_KIT}"
      retrieveInfo: "${RETRIEVE}"
    client_id: "${CLIENT_ID}"
    client_secret: "${CLIENT_SECRET}"
    message_id: "${MESSAGE_ID}"
cloud:
  aws:
    rds:
      postgresql:
        pool:
          initial: "${POSTGRESQL_POOL_INITIAL:10}"
          max: "${POSTGRESQL_POOL_MAX:10}"
        schema: "${POSTGRESQL_SCHEMA}"
management:
  health:
    probes:
      enabled: true
  endpoint:
    health:
      show-details: "never"
      enabled: true
      cache:
        time-to-live: "10s"
  endpoints:
    web:
      exposure:
        include: "health, liveness, readiness"
      base-path: "/"
      path-mapping:
        health: "health"
        liveness: "liveness"
        readiness: "readiness"

app.async.withDLQRetry: true
app.async.retryDelay: 1000
app.async.maxRetries: 1
